// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v5.26.1

import { Writer, Reader } from "as-proto/assembly";

export class TransactionRefs {
  static encode(message: TransactionRefs, writer: Writer): void {
    const hashes = message.hashes;
    if (hashes.length !== 0) {
      for (let i: i32 = 0; i < hashes.length; ++i) {
        writer.uint32(10);
        writer.bytes(hashes[i]);
      }
    }
  }

  static decode(reader: Reader, length: i32): TransactionRefs {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new TransactionRefs();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.hashes.push(reader.bytes());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  hashes: Array<Uint8Array>;

  constructor(hashes: Array<Uint8Array> = []) {
    this.hashes = hashes;
  }
}
