// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v5.26.1

import { Writer, Reader } from "as-proto/assembly";
import { IndexedAttestation } from "./IndexedAttestation";

export class AttesterSlashing {
  static encode(message: AttesterSlashing, writer: Writer): void {
    const attestation1 = message.attestation1;
    if (attestation1 !== null) {
      writer.uint32(10);
      writer.fork();
      IndexedAttestation.encode(attestation1, writer);
      writer.ldelim();
    }

    const attestation2 = message.attestation2;
    if (attestation2 !== null) {
      writer.uint32(18);
      writer.fork();
      IndexedAttestation.encode(attestation2, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): AttesterSlashing {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new AttesterSlashing();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.attestation1 = IndexedAttestation.decode(
            reader,
            reader.uint32()
          );
          break;

        case 2:
          message.attestation2 = IndexedAttestation.decode(
            reader,
            reader.uint32()
          );
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  attestation1: IndexedAttestation | null;
  attestation2: IndexedAttestation | null;

  constructor(
    attestation1: IndexedAttestation | null = null,
    attestation2: IndexedAttestation | null = null
  ) {
    this.attestation1 = attestation1;
    this.attestation2 = attestation2;
  }
}
