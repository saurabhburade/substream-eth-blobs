// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0
//   protoc        v5.26.1

import { Writer, Reader } from "as-proto/assembly";

export class Eth1Data {
  static encode(message: Eth1Data, writer: Writer): void {
    writer.uint32(10);
    writer.bytes(message.depositRoot);

    writer.uint32(16);
    writer.uint64(message.depositCount);

    writer.uint32(26);
    writer.bytes(message.blockHash);
  }

  static decode(reader: Reader, length: i32): Eth1Data {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Eth1Data();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.depositRoot = reader.bytes();
          break;

        case 2:
          message.depositCount = reader.uint64();
          break;

        case 3:
          message.blockHash = reader.bytes();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  depositRoot: Uint8Array;
  depositCount: u64;
  blockHash: Uint8Array;

  constructor(
    depositRoot: Uint8Array = new Uint8Array(0),
    depositCount: u64 = 0,
    blockHash: Uint8Array = new Uint8Array(0)
  ) {
    this.depositRoot = depositRoot;
    this.depositCount = depositCount;
    this.blockHash = blockHash;
  }
}
